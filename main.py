import logging
import pdfplumber
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, MessageHandler, Filters, CallbackContext

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º–∏
TOKEN = '7992492738:AAF1lD3pXjX6U4QDQY5Mox_MHC-tMoXWl8g'

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏)
user_ids = set()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ)
user_data = {}

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ (—Ç–æ–ª—å–∫–æ –æ–Ω —Å–º–æ–∂–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /broadcast)
admin_ids = [6376202109]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

def add_user_id(user_id):
    user_ids.add(user_id)

def start(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    first_name = update.effective_user.first_name
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —Ä–∞—Å—Å—ã–ª–æ–∫
    add_user_id(chat_id)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø–æ —Å—Å—ã–ª–∫–µ
    photo_url = 'https://i.ibb.co/5h8QG87h/IMG-0821.jpg'
    update.message.reply_photo(photo=photo_url)
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ü–µ–Ω–∞—Ä–∏—é
    welcome_text = (
        "–ñ–∞–Ω–∞–¥–∞–Ω —à—ã“ì—ã–ø –∂–∞—Ç–∫–∞–Ω –æ—Ç–∞–Ω–¥—ã“õ –∂–∞–Ω–∞ —à–µ—Ç–µ–ª–¥—ñ–∫ –∫–∏–Ω–æ, —Å–µ—Ä–∏–∞–ª–¥–∞—Ä–¥—ã –±–∏—Ä–∏–Ω—á–∏ –±–æ–ª—É–ø –∫”©—Ä—ñ–Ω—ñ–∑üî•\n"
        "KoremizKino VIP –∫–∞–Ω–∞–ª“ì–∞ –¥–æ—Å—Ç—É–ø—Ç—ã –æ—Å—ã –∂–µ—Ä–¥–µ–Ω –∞–ª–∞—Å—ã–∑ ‚¨áÔ∏è\n"
        "–°–∞—Ç—ã–ø –∞–ª—É:"
    )
    # Inline-–∫–Ω–æ–ø–∫–∞ "–î–û–°–¢–£–ü –ê–õ–£"
    keyboard = [[InlineKeyboardButton("–î–û–°–¢–£–ü –ê–õ–£", callback_data='start')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text(welcome_text, reply_markup=reply_markup)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–∞–∫–∂–µ –æ–±—ã—á–Ω—É—é –∫–Ω–æ–ø–∫—É "–ü–æ–¥–¥–µ—Ä–∂–∫–∞"
    reply_keyboard = [['–ü–æ–¥–¥–µ—Ä–∂–∫–∞']]
    update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:",
                                reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True))

def button_handler(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    chat_id = query.message.chat_id
    data = query.data

    if data == 'start':
        # –í—ã–≤–æ–¥–∏–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ç–∞—Ä–∏—Ñ–æ–≤
        keyboard = [
            [InlineKeyboardButton("3 –∞–π –¥–æ—Å—Ç—É–ø (1000—Ç–≥)", callback_data='tariff_1000')],
            [InlineKeyboardButton("–®–µ–∫—Å—ñ–∑ –¥–æ—Å—Ç—É–ø (1990—Ç–≥)", callback_data='tariff_1990')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.message.edit_text("–¢”©–ª–µ–º –∂–∞—Å–∞—É “Ø—à—ñ–Ω —Ç–∞—Ä–∏—Ñ—Ç—ñ —Ç–∞–Ω–¥–∞–Ω—ã–∑", reply_markup=reply_markup)
    elif data.startswith('tariff_'):
        tariff = data.split('_')[1]  # –ü–æ–ª—É—á–∞–µ–º '1000' –∏–ª–∏ '1990'
        user_data[chat_id] = {'tariff': tariff}
        if tariff == '1000':
            text = (
                "3 –∞–π –¥–æ—Å—Ç—É–ø –∞–ª—É “Ø—à—ñ–Ω —É—à—É–ª —Ä–µ–∫–≤–µ–∑–∏—Ç–∫–µ —Ç–æ—á–Ω–∞ 1000—Ç–≥ —Å–∞–ª—ã–ø —á–µ–∫—Ç—ñ –±–æ—Ç“õ–∞ PDF —Ñ–æ—Ä–º–∞—Ç—Ç–∞ –∂—ñ–±–µ—Ä—ñ–Ω—ñ–∑ !\n\n"
                "4400 4303 6182 4656"
            )
        elif tariff == '1990':
            text = (
                "–®–µ–∫—Å—ñ–∑ –¥–æ—Å—Ç—É–ø –∞–ª—É “Ø—à—ñ–Ω —É—à—É–ª —Ä–µ–∫–≤–µ–∑–∏—Ç–∫–µ —Ä–æ–≤–Ω–∞ 1990—Ç–≥ —Å–∞–ª—ã–ø —á–µ–∫—Ç—ñ –±–æ—Ç“õ–∞ PDF —Ñ–æ—Ä–º–∞—Ç—Ç–∞ –∂—ñ–±–µ—Ä—ñ–Ω—ñ–∑ !\n\n"
                "4400 4303 6182 4656"
            )
        query.message.edit_text(text)
        # –ï—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç PDF –Ω–µ –ø—Ä–∏—Å–ª–∞–Ω ‚Äì –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        context.job_queue.run_once(timeout_callback, 15 * 60, context=chat_id)

def timeout_callback(context: CallbackContext):
    job = context.job
    chat_id = job.context
    context.bot.send_message(chat_id, "–ë“Ø–≥—ñ–Ω —Ç”©–ª–µ–º –∂–∞—Å–∞—Å–∞–Ω—ã–∑ –±–æ–Ω—É—Å“õ–∞ 99–∫—É—Ä—Å –±–µ—Ä—ñ–ª–µ–¥—ñ !")

def document_handler(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    if chat_id not in user_data or 'tariff' not in user_data[chat_id]:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –î–û–°–¢–£–ü –ê–õ–£.")
        return

    document = update.message.document
    if document.mime_type != 'application/pdf':
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ PDF —Ñ–∞–π–ª.")
        return

    file = document.get_file()
    file_path = f"/tmp/{document.file_id}.pdf"
    file.download(custom_path=file_path)

    try:
        with pdfplumber.open(file_path) as pdf:
            full_text = ""
            for page in pdf.pages:
                text = page.extract_text()
                if text:
                    full_text += text
    except Exception as e:
        update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ PDF —Ñ–∞–π–ª–∞.")
        logger.error(e)
        return

    expected_sum = user_data[chat_id]['tariff']
    if expected_sum in full_text:
        access_link = "https://t.me/+U3i7xK98ODRmZDNi"
        update.message.reply_text(f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –í–∞—à –¥–æ—Å—Ç—É–ø: {access_link}")
    else:
        update.message.reply_text(
            f"‚ùå“ö–∞—Ç–µ —á–µ–∫ —Å–æ–º–∞—Å—ã {expected_sum}—Ç–≥ –µ–º–µ—Å. –¢”©–ª–µ–º —Ä–æ–≤–Ω–∞ {expected_sum}—Ç–≥ –±–æ–ª—É “õ–∞–∂–µ—Ç !\n"
            "–ï–≥–µ—Ä –∞—Ä—Ç—ã“õ –∂–∏–±–µ—Ä–≥–µ–Ω –±–æ–ª—Å–∞–Ω—ã–∑, –ø–æ–¥–¥–µ—Ä–∂–∫–∞“ì–∞ –∂–∞–∑—ã–Ω—ã–∑!"
        )

def support_handler(update: Update, context: CallbackContext):
    update.message.reply_text("–ü–æ–¥–¥–µ—Ä–∂–∫–∞: https://t.me/koremizkinopod")

def broadcast(update: Update, context: CallbackContext):
    # –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É
    if update.effective_user.id not in admin_ids:
        update.message.reply_text("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
        return
    args = context.args
    if not args:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /broadcast")
        return
    message_text = ' '.join(args)
    for user_id in user_ids:
        try:
            context.bot.send_message(user_id, message_text)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
    update.message.reply_text("–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(button_handler))
    dp.add_handler(MessageHandler(Filters.document.pdf, document_handler))
    dp.add_handler(MessageHandler(Filters.regex('^(–ü–æ–¥–¥–µ—Ä–∂–∫–∞)$'), support_handler))
    dp.add_handler(CommandHandler("broadcast", broadcast, pass_args=True))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
